// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bVumzfkpaXXcvNmP8r5aNd
// Component: DjhgvGvX0bRM

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: bVumzfkpaXXcvNmP8r5aNd/projectcss
import sty from "./PlasmicSeconddataintegration.module.css"; // plasmic-import: DjhgvGvX0bRM/css

createPlasmicElementProxy;

export type PlasmicSeconddataintegration__VariantMembers = {};
export type PlasmicSeconddataintegration__VariantsArgs = {};
type VariantPropType = keyof PlasmicSeconddataintegration__VariantsArgs;
export const PlasmicSeconddataintegration__VariantProps =
  new Array<VariantPropType>();

export type PlasmicSeconddataintegration__ArgsType = {};
type ArgPropType = keyof PlasmicSeconddataintegration__ArgsType;
export const PlasmicSeconddataintegration__ArgProps = new Array<ArgPropType>();

export type PlasmicSeconddataintegration__OverridesType = {
  root?: Flex__<"div">;
  wireframe4?: Flex__<"div">;
  screen1?: Flex__<"div">;
  table2?: Flex__<"div">;
  row?: Flex__<"div">;
  frame?: Flex__<"div">;
  tag?: Flex__<"div">;
  frame2?: Flex__<"div">;
  _98?: Flex__<"div">;
  frame3?: Flex__<"div">;
  frame4?: Flex__<"div">;
  frame5?: Flex__<"div">;
  frame6?: Flex__<"div">;
  row2?: Flex__<"div">;
  frame7?: Flex__<"div">;
  tag2?: Flex__<"div">;
  frame8?: Flex__<"div">;
  frame9?: Flex__<"div">;
  frame10?: Flex__<"div">;
  frame11?: Flex__<"div">;
  frame12?: Flex__<"div">;
  row3?: Flex__<"div">;
  frame13?: Flex__<"div">;
  frame14?: Flex__<"div">;
  frame15?: Flex__<"div">;
  frame16?: Flex__<"div">;
  frame17?: Flex__<"div">;
  tag3?: Flex__<"div">;
  frame18?: Flex__<"div">;
  row4?: Flex__<"div">;
  frame19?: Flex__<"div">;
  frame20?: Flex__<"div">;
  frame21?: Flex__<"div">;
  tag4?: Flex__<"div">;
  frame22?: Flex__<"div">;
  frame23?: Flex__<"div">;
  frame24?: Flex__<"div">;
  header?: Flex__<"div">;
  frame25?: Flex__<"div">;
  frame26?: Flex__<"div">;
  frame27?: Flex__<"div">;
  frame28?: Flex__<"div">;
  frame29?: Flex__<"div">;
  dataAccuracy?: Flex__<"div">;
  _97?: Flex__<"div">;
  _972?: Flex__<"div">;
  _973?: Flex__<"div">;
  _974?: Flex__<"div">;
};

export interface DefaultSeconddataintegrationProps {
  className?: string;
}

const $$ = {};

function PlasmicSeconddataintegration__RenderFunc(props: {
  variants: PlasmicSeconddataintegration__VariantsArgs;
  args: PlasmicSeconddataintegration__ArgsType;
  overrides: PlasmicSeconddataintegration__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"wireframe4"}
        data-plasmic-override={overrides.wireframe4}
        className={classNames(projectcss.all, sty.wireframe4)}
      >
        <div
          data-plasmic-name={"screen1"}
          data-plasmic-override={overrides.screen1}
          className={classNames(projectcss.all, sty.screen1)}
        >
          <div
            data-plasmic-name={"table2"}
            data-plasmic-override={overrides.table2}
            className={classNames(projectcss.all, sty.table2)}
          >
            <div
              data-plasmic-name={"row"}
              data-plasmic-override={overrides.row}
              className={classNames(projectcss.all, sty.row)}
            >
              <div
                data-plasmic-name={"frame"}
                data-plasmic-override={overrides.frame}
                className={classNames(projectcss.all, sty.frame)}
              >
                <div
                  data-plasmic-name={"tag"}
                  data-plasmic-override={overrides.tag}
                  className={classNames(projectcss.all, sty.tag)}
                >
                  <div
                    data-plasmic-name={"frame2"}
                    data-plasmic-override={overrides.frame2}
                    className={classNames(projectcss.all, sty.frame2)}
                  >
                    <div
                      data-plasmic-name={"_98"}
                      data-plasmic-override={overrides._98}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty._98
                      )}
                    >
                      {"98%\t"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"frame3"}
                data-plasmic-override={overrides.frame3}
                className={classNames(projectcss.all, sty.frame3)}
              />

              <div
                data-plasmic-name={"frame4"}
                data-plasmic-override={overrides.frame4}
                className={classNames(projectcss.all, sty.frame4)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__v0R9Z
                  )}
                >
                  {"9,800\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame5"}
                data-plasmic-override={overrides.frame5}
                className={classNames(projectcss.all, sty.frame5)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qK2K
                  )}
                >
                  {"10,000\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame6"}
                data-plasmic-override={overrides.frame6}
                className={classNames(projectcss.all, sty.frame6)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mo05P
                  )}
                >
                  {"Sales Database\t"}
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"row2"}
              data-plasmic-override={overrides.row2}
              className={classNames(projectcss.all, sty.row2)}
            >
              <div
                data-plasmic-name={"frame7"}
                data-plasmic-override={overrides.frame7}
                className={classNames(projectcss.all, sty.frame7)}
              >
                <div
                  data-plasmic-name={"tag2"}
                  data-plasmic-override={overrides.tag2}
                  className={classNames(projectcss.all, sty.tag2)}
                >
                  <div
                    data-plasmic-name={"frame8"}
                    data-plasmic-override={overrides.frame8}
                    className={classNames(projectcss.all, sty.frame8)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__n9MYo
                      )}
                    >
                      {"78%"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"frame9"}
                data-plasmic-override={overrides.frame9}
                className={classNames(projectcss.all, sty.frame9)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__skvAt
                  )}
                >
                  {"Finance System\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame10"}
                data-plasmic-override={overrides.frame10}
                className={classNames(projectcss.all, sty.frame10)}
              />

              <div
                data-plasmic-name={"frame11"}
                data-plasmic-override={overrides.frame11}
                className={classNames(projectcss.all, sty.frame11)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__n00U3
                  )}
                >
                  {"14,500\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame12"}
                data-plasmic-override={overrides.frame12}
                className={classNames(projectcss.all, sty.frame12)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5UHgt
                  )}
                >
                  {"7,000"}
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"row3"}
              data-plasmic-override={overrides.row3}
              className={classNames(projectcss.all, sty.row3)}
            >
              <div
                data-plasmic-name={"frame13"}
                data-plasmic-override={overrides.frame13}
                className={classNames(projectcss.all, sty.frame13)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6Ze3N
                  )}
                >
                  {"5,000"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame14"}
                data-plasmic-override={overrides.frame14}
                className={classNames(projectcss.all, sty.frame14)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zzIgs
                  )}
                >
                  {"2,908"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame15"}
                data-plasmic-override={overrides.frame15}
                className={classNames(projectcss.all, sty.frame15)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bUstg
                  )}
                >
                  {"Marketing Tool\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame16"}
                data-plasmic-override={overrides.frame16}
                className={classNames(projectcss.all, sty.frame16)}
              />

              <div
                data-plasmic-name={"frame17"}
                data-plasmic-override={overrides.frame17}
                className={classNames(projectcss.all, sty.frame17)}
              >
                <div
                  data-plasmic-name={"tag3"}
                  data-plasmic-override={overrides.tag3}
                  className={classNames(projectcss.all, sty.tag3)}
                >
                  <div
                    data-plasmic-name={"frame18"}
                    data-plasmic-override={overrides.frame18}
                    className={classNames(projectcss.all, sty.frame18)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bmWg
                      )}
                    >
                      {"97%"}
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"row4"}
              data-plasmic-override={overrides.row4}
              className={classNames(projectcss.all, sty.row4)}
            >
              <div
                data-plasmic-name={"frame19"}
                data-plasmic-override={overrides.frame19}
                className={classNames(projectcss.all, sty.frame19)}
              />

              <div
                data-plasmic-name={"frame20"}
                data-plasmic-override={overrides.frame20}
                className={classNames(projectcss.all, sty.frame20)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d8LA0
                  )}
                >
                  {"Operations App\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame21"}
                data-plasmic-override={overrides.frame21}
                className={classNames(projectcss.all, sty.frame21)}
              >
                <div
                  data-plasmic-name={"tag4"}
                  data-plasmic-override={overrides.tag4}
                  className={classNames(projectcss.all, sty.tag4)}
                >
                  <div
                    data-plasmic-name={"frame22"}
                    data-plasmic-override={overrides.frame22}
                    className={classNames(projectcss.all, sty.frame22)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kBxT
                      )}
                    >
                      {"26%"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"frame23"}
                data-plasmic-override={overrides.frame23}
                className={classNames(projectcss.all, sty.frame23)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9JtMi
                  )}
                >
                  {"1,000"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame24"}
                data-plasmic-override={overrides.frame24}
                className={classNames(projectcss.all, sty.frame24)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mHfqT
                  )}
                >
                  {"2,034"}
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <div
                data-plasmic-name={"frame25"}
                data-plasmic-override={overrides.frame25}
                className={classNames(projectcss.all, sty.frame25)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sDsE
                  )}
                >
                  {"Data Source\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame26"}
                data-plasmic-override={overrides.frame26}
                className={classNames(projectcss.all, sty.frame26)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hHl3T
                  )}
                >
                  {"Data Completeness (%)\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame27"}
                data-plasmic-override={overrides.frame27}
                className={classNames(projectcss.all, sty.frame27)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yfJv
                  )}
                >
                  {"Records Cleaned\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame28"}
                data-plasmic-override={overrides.frame28}
                className={classNames(projectcss.all, sty.frame28)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fLZvF
                  )}
                >
                  {"Records Processed\t"}
                </div>
              </div>
              <div
                data-plasmic-name={"frame29"}
                data-plasmic-override={overrides.frame29}
                className={classNames(projectcss.all, sty.frame29)}
              >
                <div
                  data-plasmic-name={"dataAccuracy"}
                  data-plasmic-override={overrides.dataAccuracy}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.dataAccuracy
                  )}
                >
                  {"Data Accuracy (%)\n"}
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"_97"}
              data-plasmic-override={overrides._97}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._97
              )}
            >
              {"97%\n"}
            </div>
            <div
              data-plasmic-name={"_972"}
              data-plasmic-override={overrides._972}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._972
              )}
            >
              {"97%\n"}
            </div>
            <div
              data-plasmic-name={"_973"}
              data-plasmic-override={overrides._973}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._973
              )}
            >
              {"97%\n"}
            </div>
            <div
              data-plasmic-name={"_974"}
              data-plasmic-override={overrides._974}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._974
              )}
            >
              {"97%\n"}
            </div>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "wireframe4",
    "screen1",
    "table2",
    "row",
    "frame",
    "tag",
    "frame2",
    "_98",
    "frame3",
    "frame4",
    "frame5",
    "frame6",
    "row2",
    "frame7",
    "tag2",
    "frame8",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "row3",
    "frame13",
    "frame14",
    "frame15",
    "frame16",
    "frame17",
    "tag3",
    "frame18",
    "row4",
    "frame19",
    "frame20",
    "frame21",
    "tag4",
    "frame22",
    "frame23",
    "frame24",
    "header",
    "frame25",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "dataAccuracy",
    "_97",
    "_972",
    "_973",
    "_974"
  ],
  wireframe4: [
    "wireframe4",
    "screen1",
    "table2",
    "row",
    "frame",
    "tag",
    "frame2",
    "_98",
    "frame3",
    "frame4",
    "frame5",
    "frame6",
    "row2",
    "frame7",
    "tag2",
    "frame8",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "row3",
    "frame13",
    "frame14",
    "frame15",
    "frame16",
    "frame17",
    "tag3",
    "frame18",
    "row4",
    "frame19",
    "frame20",
    "frame21",
    "tag4",
    "frame22",
    "frame23",
    "frame24",
    "header",
    "frame25",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "dataAccuracy",
    "_97",
    "_972",
    "_973",
    "_974"
  ],
  screen1: [
    "screen1",
    "table2",
    "row",
    "frame",
    "tag",
    "frame2",
    "_98",
    "frame3",
    "frame4",
    "frame5",
    "frame6",
    "row2",
    "frame7",
    "tag2",
    "frame8",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "row3",
    "frame13",
    "frame14",
    "frame15",
    "frame16",
    "frame17",
    "tag3",
    "frame18",
    "row4",
    "frame19",
    "frame20",
    "frame21",
    "tag4",
    "frame22",
    "frame23",
    "frame24",
    "header",
    "frame25",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "dataAccuracy",
    "_97",
    "_972",
    "_973",
    "_974"
  ],
  table2: [
    "table2",
    "row",
    "frame",
    "tag",
    "frame2",
    "_98",
    "frame3",
    "frame4",
    "frame5",
    "frame6",
    "row2",
    "frame7",
    "tag2",
    "frame8",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "row3",
    "frame13",
    "frame14",
    "frame15",
    "frame16",
    "frame17",
    "tag3",
    "frame18",
    "row4",
    "frame19",
    "frame20",
    "frame21",
    "tag4",
    "frame22",
    "frame23",
    "frame24",
    "header",
    "frame25",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "dataAccuracy",
    "_97",
    "_972",
    "_973",
    "_974"
  ],
  row: [
    "row",
    "frame",
    "tag",
    "frame2",
    "_98",
    "frame3",
    "frame4",
    "frame5",
    "frame6"
  ],
  frame: ["frame", "tag", "frame2", "_98"],
  tag: ["tag", "frame2", "_98"],
  frame2: ["frame2", "_98"],
  _98: ["_98"],
  frame3: ["frame3"],
  frame4: ["frame4"],
  frame5: ["frame5"],
  frame6: ["frame6"],
  row2: [
    "row2",
    "frame7",
    "tag2",
    "frame8",
    "frame9",
    "frame10",
    "frame11",
    "frame12"
  ],
  frame7: ["frame7", "tag2", "frame8"],
  tag2: ["tag2", "frame8"],
  frame8: ["frame8"],
  frame9: ["frame9"],
  frame10: ["frame10"],
  frame11: ["frame11"],
  frame12: ["frame12"],
  row3: [
    "row3",
    "frame13",
    "frame14",
    "frame15",
    "frame16",
    "frame17",
    "tag3",
    "frame18"
  ],
  frame13: ["frame13"],
  frame14: ["frame14"],
  frame15: ["frame15"],
  frame16: ["frame16"],
  frame17: ["frame17", "tag3", "frame18"],
  tag3: ["tag3", "frame18"],
  frame18: ["frame18"],
  row4: [
    "row4",
    "frame19",
    "frame20",
    "frame21",
    "tag4",
    "frame22",
    "frame23",
    "frame24"
  ],
  frame19: ["frame19"],
  frame20: ["frame20"],
  frame21: ["frame21", "tag4", "frame22"],
  tag4: ["tag4", "frame22"],
  frame22: ["frame22"],
  frame23: ["frame23"],
  frame24: ["frame24"],
  header: [
    "header",
    "frame25",
    "frame26",
    "frame27",
    "frame28",
    "frame29",
    "dataAccuracy"
  ],
  frame25: ["frame25"],
  frame26: ["frame26"],
  frame27: ["frame27"],
  frame28: ["frame28"],
  frame29: ["frame29", "dataAccuracy"],
  dataAccuracy: ["dataAccuracy"],
  _97: ["_97"],
  _972: ["_972"],
  _973: ["_973"],
  _974: ["_974"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  wireframe4: "div";
  screen1: "div";
  table2: "div";
  row: "div";
  frame: "div";
  tag: "div";
  frame2: "div";
  _98: "div";
  frame3: "div";
  frame4: "div";
  frame5: "div";
  frame6: "div";
  row2: "div";
  frame7: "div";
  tag2: "div";
  frame8: "div";
  frame9: "div";
  frame10: "div";
  frame11: "div";
  frame12: "div";
  row3: "div";
  frame13: "div";
  frame14: "div";
  frame15: "div";
  frame16: "div";
  frame17: "div";
  tag3: "div";
  frame18: "div";
  row4: "div";
  frame19: "div";
  frame20: "div";
  frame21: "div";
  tag4: "div";
  frame22: "div";
  frame23: "div";
  frame24: "div";
  header: "div";
  frame25: "div";
  frame26: "div";
  frame27: "div";
  frame28: "div";
  frame29: "div";
  dataAccuracy: "div";
  _97: "div";
  _972: "div";
  _973: "div";
  _974: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSeconddataintegration__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSeconddataintegration__VariantsArgs;
    args?: PlasmicSeconddataintegration__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSeconddataintegration__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicSeconddataintegration__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicSeconddataintegration__ArgProps,
          internalVariantPropNames: PlasmicSeconddataintegration__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSeconddataintegration__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSeconddataintegration";
  } else {
    func.displayName = `PlasmicSeconddataintegration.${nodeName}`;
  }
  return func;
}

export const PlasmicSeconddataintegration = Object.assign(
  // Top-level PlasmicSeconddataintegration renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    wireframe4: makeNodeComponent("wireframe4"),
    screen1: makeNodeComponent("screen1"),
    table2: makeNodeComponent("table2"),
    row: makeNodeComponent("row"),
    frame: makeNodeComponent("frame"),
    tag: makeNodeComponent("tag"),
    frame2: makeNodeComponent("frame2"),
    _98: makeNodeComponent("_98"),
    frame3: makeNodeComponent("frame3"),
    frame4: makeNodeComponent("frame4"),
    frame5: makeNodeComponent("frame5"),
    frame6: makeNodeComponent("frame6"),
    row2: makeNodeComponent("row2"),
    frame7: makeNodeComponent("frame7"),
    tag2: makeNodeComponent("tag2"),
    frame8: makeNodeComponent("frame8"),
    frame9: makeNodeComponent("frame9"),
    frame10: makeNodeComponent("frame10"),
    frame11: makeNodeComponent("frame11"),
    frame12: makeNodeComponent("frame12"),
    row3: makeNodeComponent("row3"),
    frame13: makeNodeComponent("frame13"),
    frame14: makeNodeComponent("frame14"),
    frame15: makeNodeComponent("frame15"),
    frame16: makeNodeComponent("frame16"),
    frame17: makeNodeComponent("frame17"),
    tag3: makeNodeComponent("tag3"),
    frame18: makeNodeComponent("frame18"),
    row4: makeNodeComponent("row4"),
    frame19: makeNodeComponent("frame19"),
    frame20: makeNodeComponent("frame20"),
    frame21: makeNodeComponent("frame21"),
    tag4: makeNodeComponent("tag4"),
    frame22: makeNodeComponent("frame22"),
    frame23: makeNodeComponent("frame23"),
    frame24: makeNodeComponent("frame24"),
    header: makeNodeComponent("header"),
    frame25: makeNodeComponent("frame25"),
    frame26: makeNodeComponent("frame26"),
    frame27: makeNodeComponent("frame27"),
    frame28: makeNodeComponent("frame28"),
    frame29: makeNodeComponent("frame29"),
    dataAccuracy: makeNodeComponent("dataAccuracy"),
    _97: makeNodeComponent("_97"),
    _972: makeNodeComponent("_972"),
    _973: makeNodeComponent("_973"),
    _974: makeNodeComponent("_974"),

    // Metadata about props expected for PlasmicSeconddataintegration
    internalVariantProps: PlasmicSeconddataintegration__VariantProps,
    internalArgProps: PlasmicSeconddataintegration__ArgProps
  }
);

export default PlasmicSeconddataintegration;
/* prettier-ignore-end */
