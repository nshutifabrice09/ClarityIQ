// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bVumzfkpaXXcvNmP8r5aNd
// Component: WW5gG1G_k2_8

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: bVumzfkpaXXcvNmP8r5aNd/projectcss
import sty from "./PlasmicDecisionsupport.module.css"; // plasmic-import: WW5gG1G_k2_8/css

import EAddIcon from "./icons/PlasmicIcon__EAdd"; // plasmic-import: po1Da24WvXgn/icon
import QuestionMark1Icon from "./icons/PlasmicIcon__QuestionMark1"; // plasmic-import: yY_Xh4fGKtqL/icon
import Bell1Icon from "./icons/PlasmicIcon__Bell1"; // plasmic-import: n9zUMqSDbSlh/icon
import Layout11Icon from "./icons/PlasmicIcon__Layout11"; // plasmic-import: zToZXXJTB9dc/icon
import FolderIcon from "./icons/PlasmicIcon__Folder"; // plasmic-import: 90X0AxWg__s9/icon
import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: hCmqTbEa_XEh/icon
import FarmerMarketIcon from "./icons/PlasmicIcon__FarmerMarket"; // plasmic-import: 5cySklPsBu5b/icon
import CalendarIcon from "./icons/PlasmicIcon__Calendar"; // plasmic-import: c4V_2BCP5vb8/icon
import FChatIcon from "./icons/PlasmicIcon__FChat"; // plasmic-import: 6b5_xU8yWQFY/icon
import CandlestickChartIcon from "./icons/PlasmicIcon__CandlestickChart"; // plasmic-import: ZYZreGho0u9b/icon
import WhiskersIcon from "./icons/PlasmicIcon__Whiskers"; // plasmic-import: 6QYFPKXZ9GqK/icon
import DownloadIcon from "./icons/PlasmicIcon__Download"; // plasmic-import: 0-AgzpxQF9ix/icon
import MoveUpIcon from "./icons/PlasmicIcon__MoveUp"; // plasmic-import: 4dzxyHkIUjrn/icon

createPlasmicElementProxy;

export type PlasmicDecisionsupport__VariantMembers = {};
export type PlasmicDecisionsupport__VariantsArgs = {};
type VariantPropType = keyof PlasmicDecisionsupport__VariantsArgs;
export const PlasmicDecisionsupport__VariantProps =
  new Array<VariantPropType>();

export type PlasmicDecisionsupport__ArgsType = {};
type ArgPropType = keyof PlasmicDecisionsupport__ArgsType;
export const PlasmicDecisionsupport__ArgProps = new Array<ArgPropType>();

export type PlasmicDecisionsupport__OverridesType = {
  root?: Flex__<"div">;
  wireframe15?: Flex__<"div">;
  dataTable?: Flex__<"div">;
  container39?: Flex__<"div">;
  avatar3?: Flex__<"div">;
  rectangle?: Flex__<"div">;
  button16?: Flex__<"div">;
  container42?: Flex__<"div">;
  sidebarMenu1?: Flex__<"div">;
  frame?: Flex__<"div">;
  frame2?: Flex__<"div">;
  sidebarMenu3?: Flex__<"div">;
  frame3?: Flex__<"div">;
  frame4?: Flex__<"div">;
  frame5?: Flex__<"div">;
  customerInsights?: Flex__<"div">;
  frame6?: Flex__<"div">;
  frame7?: Flex__<"div">;
  frame8?: Flex__<"div">;
  financialPerformance?: Flex__<"div">;
  image?: Flex__<"div">;
  image2?: Flex__<"div">;
  image3?: Flex__<"div">;
  button14?: Flex__<"div">;
  button15?: Flex__<"div">;
  table6?: Flex__<"div">;
  row?: Flex__<"div">;
  frame9?: Flex__<"div">;
  frame10?: Flex__<"div">;
  frame11?: Flex__<"div">;
  frame12?: Flex__<"div">;
  frame13?: Flex__<"div">;
  frame14?: Flex__<"div">;
  increaseMarketShareBy10?: Flex__<"div">;
  row2?: Flex__<"div">;
  frame15?: Flex__<"div">;
  frame16?: Flex__<"div">;
  frame17?: Flex__<"div">;
  frame18?: Flex__<"div">;
  frame19?: Flex__<"div">;
  frame20?: Flex__<"div">;
  reduceChurnRateBy15?: Flex__<"div">;
  row3?: Flex__<"div">;
  frame21?: Flex__<"div">;
  frame22?: Flex__<"div">;
  frame23?: Flex__<"div">;
  frame24?: Flex__<"div">;
  frame25?: Flex__<"div">;
  frame26?: Flex__<"div">;
  header?: Flex__<"div">;
  frame27?: Flex__<"div">;
  frame28?: Flex__<"div">;
  frame29?: Flex__<"div">;
  frame30?: Flex__<"div">;
  frame31?: Flex__<"div">;
  frame32?: Flex__<"div">;
};

export interface DefaultDecisionsupportProps {
  className?: string;
}

const $$ = {};

function PlasmicDecisionsupport__RenderFunc(props: {
  variants: PlasmicDecisionsupport__VariantsArgs;
  args: PlasmicDecisionsupport__ArgsType;
  overrides: PlasmicDecisionsupport__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"wireframe15"}
            data-plasmic-override={overrides.wireframe15}
            className={classNames(projectcss.all, sty.wireframe15)}
          >
            <div
              data-plasmic-name={"dataTable"}
              data-plasmic-override={overrides.dataTable}
              className={classNames(projectcss.all, sty.dataTable)}
            >
              <div
                data-plasmic-name={"container39"}
                data-plasmic-override={overrides.container39}
                className={classNames(projectcss.all, sty.container39)}
              >
                <div
                  data-plasmic-name={"avatar3"}
                  data-plasmic-override={overrides.avatar3}
                  className={classNames(projectcss.all, sty.avatar3)}
                >
                  <div
                    data-plasmic-name={"rectangle"}
                    data-plasmic-override={overrides.rectangle}
                    className={classNames(projectcss.all, sty.rectangle)}
                  />
                </div>
                <div
                  data-plasmic-name={"button16"}
                  data-plasmic-override={overrides.button16}
                  className={classNames(projectcss.all, sty.button16)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5Ns6E
                    )}
                  >
                    {"Add report"}
                  </div>
                  <EAddIcon
                    className={classNames(projectcss.all, sty.svg__wVXwc)}
                    role={"img"}
                  />
                </div>
                <QuestionMark1Icon
                  className={classNames(projectcss.all, sty.svg___9ObEl)}
                  role={"img"}
                />

                <Bell1Icon
                  className={classNames(projectcss.all, sty.svg__o0C3Z)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mmluD
                  )}
                >
                  {"Strategic Planning and Decision Support"}
                </div>
              </div>
              <div
                data-plasmic-name={"container42"}
                data-plasmic-override={overrides.container42}
                className={classNames(projectcss.all, sty.container42)}
              >
                <div
                  data-plasmic-name={"sidebarMenu1"}
                  data-plasmic-override={overrides.sidebarMenu1}
                  className={classNames(projectcss.all, sty.sidebarMenu1)}
                >
                  <div
                    data-plasmic-name={"frame"}
                    data-plasmic-override={overrides.frame}
                    className={classNames(projectcss.all, sty.frame)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6VnOb
                      )}
                    >
                      {"Dashboard"}
                    </div>
                    <Layout11Icon
                      className={classNames(projectcss.all, sty.svg__gfqdl)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"frame2"}
                    data-plasmic-override={overrides.frame2}
                    className={classNames(projectcss.all, sty.frame2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7Lm4J
                      )}
                    >
                      {"Data Integration and Aggregation"}
                    </div>
                    <FolderIcon
                      className={classNames(projectcss.all, sty.svg___4Ahkd)}
                      role={"img"}
                    />
                  </div>
                </div>
                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__v2Nud)}
                  role={"img"}
                />

                <Line1Icon
                  className={classNames(projectcss.all, sty.svg__wYSh)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"sidebarMenu3"}
                  data-plasmic-override={overrides.sidebarMenu3}
                  className={classNames(projectcss.all, sty.sidebarMenu3)}
                >
                  <div
                    data-plasmic-name={"frame3"}
                    data-plasmic-override={overrides.frame3}
                    className={classNames(projectcss.all, sty.frame3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hJ18
                      )}
                    >
                      {"Market and Competitive"}
                    </div>
                    <FarmerMarketIcon
                      className={classNames(projectcss.all, sty.svg__jNOvf)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"frame4"}
                    data-plasmic-override={overrides.frame4}
                    className={classNames(projectcss.all, sty.frame4)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1HT9I
                      )}
                    >
                      {"Business Process Analysis:"}
                    </div>
                    <CalendarIcon
                      className={classNames(projectcss.all, sty.svg__nmBgj)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"frame5"}
                    data-plasmic-override={overrides.frame5}
                    className={classNames(projectcss.all, sty.frame5)}
                  >
                    <div
                      data-plasmic-name={"customerInsights"}
                      data-plasmic-override={overrides.customerInsights}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.customerInsights
                      )}
                    >
                      {"Customer Insights "}
                    </div>
                    <FChatIcon
                      className={classNames(projectcss.all, sty.svg__mjUwQ)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"frame6"}
                    data-plasmic-override={overrides.frame6}
                    className={classNames(projectcss.all, sty.frame6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uZFuS
                      )}
                    >
                      {"Financial Performance"}
                    </div>
                    <CandlestickChartIcon
                      className={classNames(projectcss.all, sty.svg__sPnQ)}
                      role={"img"}
                    />
                  </div>
                  <div
                    data-plasmic-name={"frame7"}
                    data-plasmic-override={overrides.frame7}
                    className={classNames(projectcss.all, sty.frame7)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d7Unv
                      )}
                    >
                      {"Risk Identification"}
                    </div>
                    <WhiskersIcon
                      className={classNames(projectcss.all, sty.svg__bZzU)}
                      role={"img"}
                    />
                  </div>
                </div>
                <div
                  data-plasmic-name={"frame8"}
                  data-plasmic-override={overrides.frame8}
                  className={classNames(projectcss.all, sty.frame8)}
                >
                  <div
                    data-plasmic-name={"financialPerformance"}
                    data-plasmic-override={overrides.financialPerformance}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.financialPerformance
                    )}
                  >
                    {"Decision Support"}
                  </div>
                  <CandlestickChartIcon
                    className={classNames(projectcss.all, sty.svg__bWGJ)}
                    role={"img"}
                  />
                </div>
                <div
                  data-plasmic-name={"image"}
                  data-plasmic-override={overrides.image}
                  className={classNames(projectcss.all, sty.image)}
                />
              </div>
              <div
                data-plasmic-name={"image2"}
                data-plasmic-override={overrides.image2}
                className={classNames(projectcss.all, sty.image2)}
              />

              <div
                data-plasmic-name={"image3"}
                data-plasmic-override={overrides.image3}
                className={classNames(projectcss.all, sty.image3)}
              />

              <div
                data-plasmic-name={"button14"}
                data-plasmic-override={overrides.button14}
                className={classNames(projectcss.all, sty.button14)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wHfXs
                  )}
                >
                  {"Import"}
                </div>
                <DownloadIcon
                  className={classNames(projectcss.all, sty.svg__j7AGv)}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"button15"}
                data-plasmic-override={overrides.button15}
                className={classNames(projectcss.all, sty.button15)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wGj1E
                  )}
                >
                  {"Export"}
                </div>
                <MoveUpIcon
                  className={classNames(projectcss.all, sty.svg__jOs0V)}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"table6"}
                data-plasmic-override={overrides.table6}
                className={classNames(projectcss.all, sty.table6)}
              >
                <div
                  data-plasmic-name={"row"}
                  data-plasmic-override={overrides.row}
                  className={classNames(projectcss.all, sty.row)}
                >
                  <div
                    data-plasmic-name={"frame9"}
                    data-plasmic-override={overrides.frame9}
                    className={classNames(projectcss.all, sty.frame9)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___47K6Z
                      )}
                    >
                      {"Key Objectives"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame10"}
                    data-plasmic-override={overrides.frame10}
                    className={classNames(projectcss.all, sty.frame10)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dkBlb
                      )}
                    >
                      {"2024-01-01\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame11"}
                    data-plasmic-override={overrides.frame11}
                    className={classNames(projectcss.all, sty.frame11)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9PWRo
                      )}
                    >
                      {"Enter new international markets\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame12"}
                    data-plasmic-override={overrides.frame12}
                    className={classNames(projectcss.all, sty.frame12)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vHivW
                      )}
                    >
                      {"2024-01-01\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame13"}
                    data-plasmic-override={overrides.frame13}
                    className={classNames(projectcss.all, sty.frame13)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hTyh
                      )}
                    >
                      {"In Progress\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame14"}
                    data-plasmic-override={overrides.frame14}
                    className={classNames(projectcss.all, sty.frame14)}
                  >
                    <div
                      data-plasmic-name={"increaseMarketShareBy10"}
                      data-plasmic-override={overrides.increaseMarketShareBy10}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.increaseMarketShareBy10
                      )}
                    >
                      {"Increase market share by 10%\n"}
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"row2"}
                  data-plasmic-override={overrides.row2}
                  className={classNames(projectcss.all, sty.row2)}
                >
                  <div
                    data-plasmic-name={"frame15"}
                    data-plasmic-override={overrides.frame15}
                    className={classNames(projectcss.all, sty.frame15)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sk34H
                      )}
                    >
                      {"2024-03-01\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame16"}
                    data-plasmic-override={overrides.frame16}
                    className={classNames(projectcss.all, sty.frame16)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wj1Z9
                      )}
                    >
                      {"2024-03-01\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame17"}
                    data-plasmic-override={overrides.frame17}
                    className={classNames(projectcss.all, sty.frame17)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lRoE
                      )}
                    >
                      {"Product Innovation\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame18"}
                    data-plasmic-override={overrides.frame18}
                    className={classNames(projectcss.all, sty.frame18)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pDkGa
                      )}
                    >
                      {"Develop and launch new eco-friendly product line\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame19"}
                    data-plasmic-override={overrides.frame19}
                    className={classNames(projectcss.all, sty.frame19)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l8MsQ
                      )}
                    >
                      {"Not Started\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame20"}
                    data-plasmic-override={overrides.frame20}
                    className={classNames(projectcss.all, sty.frame20)}
                  >
                    <div
                      data-plasmic-name={"reduceChurnRateBy15"}
                      data-plasmic-override={overrides.reduceChurnRateBy15}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.reduceChurnRateBy15
                      )}
                    >
                      {"Reduce churn rate by 15%\n"}
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"row3"}
                  data-plasmic-override={overrides.row3}
                  className={classNames(projectcss.all, sty.row3)}
                >
                  <div
                    data-plasmic-name={"frame21"}
                    data-plasmic-override={overrides.frame21}
                    className={classNames(projectcss.all, sty.frame21)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h9Sna
                      )}
                    >
                      {"Completed\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame22"}
                    data-plasmic-override={overrides.frame22}
                    className={classNames(projectcss.all, sty.frame22)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qDlYq
                      )}
                    >
                      {"Regulatory Risk\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame23"}
                    data-plasmic-override={overrides.frame23}
                    className={classNames(projectcss.all, sty.frame23)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ariU
                      )}
                    >
                      {"Legal team on standby"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame24"}
                    data-plasmic-override={overrides.frame24}
                    className={classNames(projectcss.all, sty.frame24)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oAAny
                      )}
                    >
                      {"Regular compliance audits\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame25"}
                    data-plasmic-override={overrides.frame25}
                    className={classNames(projectcss.all, sty.frame25)}
                  />

                  <div
                    data-plasmic-name={"frame26"}
                    data-plasmic-override={overrides.frame26}
                    className={classNames(projectcss.all, sty.frame26)}
                  />
                </div>
                <div
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                  className={classNames(projectcss.all, sty.header)}
                >
                  <div
                    data-plasmic-name={"frame27"}
                    data-plasmic-override={overrides.frame27}
                    className={classNames(projectcss.all, sty.frame27)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__np6N1
                      )}
                    >
                      {"Initiative\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame28"}
                    data-plasmic-override={overrides.frame28}
                    className={classNames(projectcss.all, sty.frame28)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y1Rg
                      )}
                    >
                      {"Start Date\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame29"}
                    data-plasmic-override={overrides.frame29}
                    className={classNames(projectcss.all, sty.frame29)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__evfyy
                      )}
                    >
                      {"Status (Not Started/In Progress/Completed)\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame30"}
                    data-plasmic-override={overrides.frame30}
                    className={classNames(projectcss.all, sty.frame30)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kO57S
                      )}
                    >
                      {"Description\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame31"}
                    data-plasmic-override={overrides.frame31}
                    className={classNames(projectcss.all, sty.frame31)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bHk3I
                      )}
                    >
                      {"End Date\t"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"frame32"}
                    data-plasmic-override={overrides.frame32}
                    className={classNames(projectcss.all, sty.frame32)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6YaA2
                      )}
                    >
                      {"Key Objectives"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__o1Bs
                )}
              >
                {"Strategic Initiatives"}
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "wireframe15",
    "dataTable",
    "container39",
    "avatar3",
    "rectangle",
    "button16",
    "container42",
    "sidebarMenu1",
    "frame",
    "frame2",
    "sidebarMenu3",
    "frame3",
    "frame4",
    "frame5",
    "customerInsights",
    "frame6",
    "frame7",
    "frame8",
    "financialPerformance",
    "image",
    "image2",
    "image3",
    "button14",
    "button15",
    "table6",
    "row",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "increaseMarketShareBy10",
    "row2",
    "frame15",
    "frame16",
    "frame17",
    "frame18",
    "frame19",
    "frame20",
    "reduceChurnRateBy15",
    "row3",
    "frame21",
    "frame22",
    "frame23",
    "frame24",
    "frame25",
    "frame26",
    "header",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32"
  ],
  wireframe15: [
    "wireframe15",
    "dataTable",
    "container39",
    "avatar3",
    "rectangle",
    "button16",
    "container42",
    "sidebarMenu1",
    "frame",
    "frame2",
    "sidebarMenu3",
    "frame3",
    "frame4",
    "frame5",
    "customerInsights",
    "frame6",
    "frame7",
    "frame8",
    "financialPerformance",
    "image",
    "image2",
    "image3",
    "button14",
    "button15",
    "table6",
    "row",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "increaseMarketShareBy10",
    "row2",
    "frame15",
    "frame16",
    "frame17",
    "frame18",
    "frame19",
    "frame20",
    "reduceChurnRateBy15",
    "row3",
    "frame21",
    "frame22",
    "frame23",
    "frame24",
    "frame25",
    "frame26",
    "header",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32"
  ],
  dataTable: [
    "dataTable",
    "container39",
    "avatar3",
    "rectangle",
    "button16",
    "container42",
    "sidebarMenu1",
    "frame",
    "frame2",
    "sidebarMenu3",
    "frame3",
    "frame4",
    "frame5",
    "customerInsights",
    "frame6",
    "frame7",
    "frame8",
    "financialPerformance",
    "image",
    "image2",
    "image3",
    "button14",
    "button15",
    "table6",
    "row",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "increaseMarketShareBy10",
    "row2",
    "frame15",
    "frame16",
    "frame17",
    "frame18",
    "frame19",
    "frame20",
    "reduceChurnRateBy15",
    "row3",
    "frame21",
    "frame22",
    "frame23",
    "frame24",
    "frame25",
    "frame26",
    "header",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32"
  ],
  container39: ["container39", "avatar3", "rectangle", "button16"],
  avatar3: ["avatar3", "rectangle"],
  rectangle: ["rectangle"],
  button16: ["button16"],
  container42: [
    "container42",
    "sidebarMenu1",
    "frame",
    "frame2",
    "sidebarMenu3",
    "frame3",
    "frame4",
    "frame5",
    "customerInsights",
    "frame6",
    "frame7",
    "frame8",
    "financialPerformance",
    "image"
  ],
  sidebarMenu1: ["sidebarMenu1", "frame", "frame2"],
  frame: ["frame"],
  frame2: ["frame2"],
  sidebarMenu3: [
    "sidebarMenu3",
    "frame3",
    "frame4",
    "frame5",
    "customerInsights",
    "frame6",
    "frame7"
  ],
  frame3: ["frame3"],
  frame4: ["frame4"],
  frame5: ["frame5", "customerInsights"],
  customerInsights: ["customerInsights"],
  frame6: ["frame6"],
  frame7: ["frame7"],
  frame8: ["frame8", "financialPerformance"],
  financialPerformance: ["financialPerformance"],
  image: ["image"],
  image2: ["image2"],
  image3: ["image3"],
  button14: ["button14"],
  button15: ["button15"],
  table6: [
    "table6",
    "row",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "increaseMarketShareBy10",
    "row2",
    "frame15",
    "frame16",
    "frame17",
    "frame18",
    "frame19",
    "frame20",
    "reduceChurnRateBy15",
    "row3",
    "frame21",
    "frame22",
    "frame23",
    "frame24",
    "frame25",
    "frame26",
    "header",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32"
  ],
  row: [
    "row",
    "frame9",
    "frame10",
    "frame11",
    "frame12",
    "frame13",
    "frame14",
    "increaseMarketShareBy10"
  ],
  frame9: ["frame9"],
  frame10: ["frame10"],
  frame11: ["frame11"],
  frame12: ["frame12"],
  frame13: ["frame13"],
  frame14: ["frame14", "increaseMarketShareBy10"],
  increaseMarketShareBy10: ["increaseMarketShareBy10"],
  row2: [
    "row2",
    "frame15",
    "frame16",
    "frame17",
    "frame18",
    "frame19",
    "frame20",
    "reduceChurnRateBy15"
  ],
  frame15: ["frame15"],
  frame16: ["frame16"],
  frame17: ["frame17"],
  frame18: ["frame18"],
  frame19: ["frame19"],
  frame20: ["frame20", "reduceChurnRateBy15"],
  reduceChurnRateBy15: ["reduceChurnRateBy15"],
  row3: [
    "row3",
    "frame21",
    "frame22",
    "frame23",
    "frame24",
    "frame25",
    "frame26"
  ],
  frame21: ["frame21"],
  frame22: ["frame22"],
  frame23: ["frame23"],
  frame24: ["frame24"],
  frame25: ["frame25"],
  frame26: ["frame26"],
  header: [
    "header",
    "frame27",
    "frame28",
    "frame29",
    "frame30",
    "frame31",
    "frame32"
  ],
  frame27: ["frame27"],
  frame28: ["frame28"],
  frame29: ["frame29"],
  frame30: ["frame30"],
  frame31: ["frame31"],
  frame32: ["frame32"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  wireframe15: "div";
  dataTable: "div";
  container39: "div";
  avatar3: "div";
  rectangle: "div";
  button16: "div";
  container42: "div";
  sidebarMenu1: "div";
  frame: "div";
  frame2: "div";
  sidebarMenu3: "div";
  frame3: "div";
  frame4: "div";
  frame5: "div";
  customerInsights: "div";
  frame6: "div";
  frame7: "div";
  frame8: "div";
  financialPerformance: "div";
  image: "div";
  image2: "div";
  image3: "div";
  button14: "div";
  button15: "div";
  table6: "div";
  row: "div";
  frame9: "div";
  frame10: "div";
  frame11: "div";
  frame12: "div";
  frame13: "div";
  frame14: "div";
  increaseMarketShareBy10: "div";
  row2: "div";
  frame15: "div";
  frame16: "div";
  frame17: "div";
  frame18: "div";
  frame19: "div";
  frame20: "div";
  reduceChurnRateBy15: "div";
  row3: "div";
  frame21: "div";
  frame22: "div";
  frame23: "div";
  frame24: "div";
  frame25: "div";
  frame26: "div";
  header: "div";
  frame27: "div";
  frame28: "div";
  frame29: "div";
  frame30: "div";
  frame31: "div";
  frame32: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDecisionsupport__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDecisionsupport__VariantsArgs;
    args?: PlasmicDecisionsupport__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDecisionsupport__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicDecisionsupport__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicDecisionsupport__ArgProps,
          internalVariantPropNames: PlasmicDecisionsupport__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicDecisionsupport__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDecisionsupport";
  } else {
    func.displayName = `PlasmicDecisionsupport.${nodeName}`;
  }
  return func;
}

export const PlasmicDecisionsupport = Object.assign(
  // Top-level PlasmicDecisionsupport renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    wireframe15: makeNodeComponent("wireframe15"),
    dataTable: makeNodeComponent("dataTable"),
    container39: makeNodeComponent("container39"),
    avatar3: makeNodeComponent("avatar3"),
    rectangle: makeNodeComponent("rectangle"),
    button16: makeNodeComponent("button16"),
    container42: makeNodeComponent("container42"),
    sidebarMenu1: makeNodeComponent("sidebarMenu1"),
    frame: makeNodeComponent("frame"),
    frame2: makeNodeComponent("frame2"),
    sidebarMenu3: makeNodeComponent("sidebarMenu3"),
    frame3: makeNodeComponent("frame3"),
    frame4: makeNodeComponent("frame4"),
    frame5: makeNodeComponent("frame5"),
    customerInsights: makeNodeComponent("customerInsights"),
    frame6: makeNodeComponent("frame6"),
    frame7: makeNodeComponent("frame7"),
    frame8: makeNodeComponent("frame8"),
    financialPerformance: makeNodeComponent("financialPerformance"),
    image: makeNodeComponent("image"),
    image2: makeNodeComponent("image2"),
    image3: makeNodeComponent("image3"),
    button14: makeNodeComponent("button14"),
    button15: makeNodeComponent("button15"),
    table6: makeNodeComponent("table6"),
    row: makeNodeComponent("row"),
    frame9: makeNodeComponent("frame9"),
    frame10: makeNodeComponent("frame10"),
    frame11: makeNodeComponent("frame11"),
    frame12: makeNodeComponent("frame12"),
    frame13: makeNodeComponent("frame13"),
    frame14: makeNodeComponent("frame14"),
    increaseMarketShareBy10: makeNodeComponent("increaseMarketShareBy10"),
    row2: makeNodeComponent("row2"),
    frame15: makeNodeComponent("frame15"),
    frame16: makeNodeComponent("frame16"),
    frame17: makeNodeComponent("frame17"),
    frame18: makeNodeComponent("frame18"),
    frame19: makeNodeComponent("frame19"),
    frame20: makeNodeComponent("frame20"),
    reduceChurnRateBy15: makeNodeComponent("reduceChurnRateBy15"),
    row3: makeNodeComponent("row3"),
    frame21: makeNodeComponent("frame21"),
    frame22: makeNodeComponent("frame22"),
    frame23: makeNodeComponent("frame23"),
    frame24: makeNodeComponent("frame24"),
    frame25: makeNodeComponent("frame25"),
    frame26: makeNodeComponent("frame26"),
    header: makeNodeComponent("header"),
    frame27: makeNodeComponent("frame27"),
    frame28: makeNodeComponent("frame28"),
    frame29: makeNodeComponent("frame29"),
    frame30: makeNodeComponent("frame30"),
    frame31: makeNodeComponent("frame31"),
    frame32: makeNodeComponent("frame32"),

    // Metadata about props expected for PlasmicDecisionsupport
    internalVariantProps: PlasmicDecisionsupport__VariantProps,
    internalArgProps: PlasmicDecisionsupport__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicDecisionsupport;
/* prettier-ignore-end */
